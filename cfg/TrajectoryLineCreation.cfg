#!/usr/bin/env python
PACKAGE = "trajectory_generator"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("min_forward_dist", double_t, 0, "Min distance to look forward to goal point [m]", 0.5, 0.1, 2.0)
gen.add("current_velocity", double_t, 0, "DEBUG: current velocity [m/s]", 0.5, 0.1, 2.0)
gen.add("crossing_turn_angle_left", double_t, 0, "Turn angle applied when command TURN_LEFT is published (at crossing)", 0.35, 0.1, 2.0)
gen.add("crossing_turn_angle_right", double_t, 0, "Turn angle applied when command TURN_RIGHT is published (at crossing)", 0.6, 0.1, 2.0)
gen.add("lane_width", double_t, 0, "Lane width applied for offset lane change manouver", 0.4, 0.35, 0.45)
gen.add("understeer_factor", double_t, 0, "Understeer factor applied to computed steering angle", 0.8, 0.1, 1.0)
gen.add("hardcoded_forward_distance", double_t, 0, "Debug: hardcoded forward distance", 0.6, 0.1, 2.0)

#### PARKING ####
gen.add("yaw_threshold", double_t, 0, "Threshold of yaw angle of car to road line [rad]", 0.09, 0.02, 0.2)

### general collision avoidance ###
gen.add("obstacle_detection_angle", double_t, 0, "Threshold for the angle under which the obstacles will be considered [deg]", 30, 15, 60)

### SEARCHING ###
gen.add("velocity_searching", double_t, 0, "Velocity while searching [m/s]", 1.0, 0.1, 1.5)
gen.add("min_parking_space_size", double_t, 0, "Min parking space size [m]", 0.3, 0.1, 0.5)
gen.add("max_parking_space_size", double_t, 0, "Max parking space size [m]", 0.75, 0.5, 1.0)

exit(gen.generate(PACKAGE, "drive_ros_trajectory_generator", "TrajectoryLineCreation"))
